{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\risha\\\\OneDrive\\\\Desktop\\\\blog app\\\\public\\\\src\\\\pages\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../services/api';\nimport CommentList from '../components/CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostDetail({\n  isAuth\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    fetchPost();\n    fetchComments();\n  }, [id]);\n  const fetchPost = async () => {\n    try {\n      const res = await api.get(`/posts/${id}`);\n      setPost(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const fetchComments = async () => {\n    try {\n      const res = await api.get('/comments', {\n        params: {\n          post_id: id\n        }\n      });\n      setComments(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleAddComment = async e => {\n    e.preventDefault();\n    try {\n      await api.post('/comments', {\n        content: newComment,\n        post_id: id\n      });\n      setNewComment('');\n      fetchComments();\n    } catch (err) {\n      alert('Failed to add comment');\n    }\n  };\n  if (!post) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"By: \", post.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isAuth && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddComment,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Add a comment\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments,\n      isAuth: isAuth,\n      fetchComments: fetchComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(PostDetail, \"vYcnaA+MtnxynjUJ4gBxZblTQco=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","api","CommentList","jsxDEV","_jsxDEV","PostDetail","isAuth","_s","id","post","setPost","comments","setComments","newComment","setNewComment","fetchPost","fetchComments","res","get","data","err","console","error","params","post_id","handleAddComment","e","preventDefault","content","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","title","author","username","onSubmit","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["C:/Users/risha/OneDrive/Desktop/blog app/public/src/pages/PostDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport CommentList from '../components/CommentList';\r\n\r\nfunction PostDetail({ isAuth }) {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchPost();\r\n    fetchComments();\r\n  }, [id]);\r\n\r\n  const fetchPost = async () => {\r\n    try {\r\n      const res = await api.get(`/posts/${id}`);\r\n      setPost(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const res = await api.get('/comments', { params: { post_id: id } });\r\n      setComments(res.data);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await api.post('/comments', { content: newComment, post_id: id });\r\n      setNewComment('');\r\n      fetchComments();\r\n    } catch (err) {\r\n      alert('Failed to add comment');\r\n    }\r\n  };\r\n\r\n  if (!post) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.content}</p>\r\n      <p>By: {post.author.username}</p>\r\n      <h2>Comments</h2>\r\n      {isAuth && (\r\n        <form onSubmit={handleAddComment}>\r\n          <textarea\r\n            placeholder=\"Add a comment\"\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Add Comment</button>\r\n        </form>\r\n      )}\r\n      <CommentList comments={comments} isAuth={isAuth} fetchComments={fetchComments} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PostDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,UAAUA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;IACXC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC;EAER,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAME,GAAG,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,UAAUV,EAAE,EAAE,CAAC;MACzCE,OAAO,CAACO,GAAG,CAACE,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,MAAMJ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMhB,GAAG,CAACiB,GAAG,CAAC,WAAW,EAAE;QAAEK,MAAM,EAAE;UAAEC,OAAO,EAAEhB;QAAG;MAAE,CAAC,CAAC;MACnEI,WAAW,CAACK,GAAG,CAACE,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,MAAMK,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM1B,GAAG,CAACQ,IAAI,CAAC,WAAW,EAAE;QAAEmB,OAAO,EAAEf,UAAU;QAAEW,OAAO,EAAEhB;MAAG,CAAC,CAAC;MACjEM,aAAa,CAAC,EAAE,CAAC;MACjBE,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZS,KAAK,CAAC,uBAAuB,CAAC;IAChC;EACF,CAAC;EAED,IAAI,CAACpB,IAAI,EAAE,oBAAOL,OAAA;IAAA0B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvC,oBACE9B,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAKrB,IAAI,CAAC0B;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrB9B,OAAA;MAAA0B,QAAA,EAAIrB,IAAI,CAACmB;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB9B,OAAA;MAAA0B,QAAA,GAAG,MAAI,EAACrB,IAAI,CAAC2B,MAAM,CAACC,QAAQ;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjC9B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChB5B,MAAM,iBACLF,OAAA;MAAMkC,QAAQ,EAAEb,gBAAiB;MAAAK,QAAA,gBAC/B1B,OAAA;QACEmC,WAAW,EAAC,eAAe;QAC3BC,KAAK,EAAE3B,UAAW;QAClB4B,QAAQ,EAAGf,CAAC,IAAKZ,aAAa,CAACY,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;QAC/CG,QAAQ;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF9B,OAAA;QAAQwC,IAAI,EAAC,QAAQ;QAAAd,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACP,eACD9B,OAAA,CAACF,WAAW;MAACS,QAAQ,EAAEA,QAAS;MAACL,MAAM,EAAEA,MAAO;MAACU,aAAa,EAAEA;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEV;AAAC3B,EAAA,CA9DQF,UAAU;EAAA,QACFL,SAAS;AAAA;AAAA6C,EAAA,GADjBxC,UAAU;AAgEnB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}