{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\risha\\\\OneDrive\\\\Desktop\\\\blog app\\\\public\\\\src\\\\pages\\\\MyPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport PostCard from '../components/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPosts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const resolveUserId = () => {\n    let userId = localStorage.getItem('userId');\n    if (!userId) {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          var _payload$user;\n          const payload = JSON.parse(atob(token.split('.')[1]));\n          userId = payload === null || payload === void 0 ? void 0 : (_payload$user = payload.user) === null || _payload$user === void 0 ? void 0 : _payload$user.id;\n          if (userId) localStorage.setItem('userId', userId);\n        } catch (e) {\n          console.log('Failed to decode token for user id');\n        }\n      }\n    }\n    return userId;\n  };\n  const fetchMyPosts = async () => {\n    setLoading(true);\n    try {\n      const userId = resolveUserId();\n      if (!userId) {\n        setPosts([]);\n        setLoading(false);\n        return;\n      }\n      const res = await api.get('/posts', {\n        params: {\n          authorId: userId,\n          t: Date.now()\n        }\n      });\n      setPosts(res.data || []);\n    } catch (err) {\n      console.error('Error loading my posts:', err);\n      setPosts([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMyPosts();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"hero-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"hero-title\",\n        children: \"My Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"hero-subtitle\",\n        children: \"All posts you have created\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-grid\",\n      children: posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '3rem',\n          color: 'rgba(255, 255, 255, 0.7)',\n          fontSize: '1.1rem',\n          gridColumn: '1 / -1'\n        },\n        children: \"You haven't created any posts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(MyPosts, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","useEffect","useState","api","PostCard","jsxDEV","_jsxDEV","MyPosts","_s","posts","setPosts","loading","setLoading","resolveUserId","userId","localStorage","getItem","token","_payload$user","payload","JSON","parse","atob","split","user","id","setItem","e","console","log","fetchMyPosts","res","get","params","authorId","t","Date","now","data","err","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","_id","style","textAlign","padding","color","fontSize","gridColumn","_c","$RefreshReg$"],"sources":["C:/Users/risha/OneDrive/Desktop/blog app/public/src/pages/MyPosts.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport PostCard from '../components/PostCard';\n\nfunction MyPosts() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const resolveUserId = () => {\n    let userId = localStorage.getItem('userId');\n    if (!userId) {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const payload = JSON.parse(atob(token.split('.')[1]));\n          userId = payload?.user?.id;\n          if (userId) localStorage.setItem('userId', userId);\n        } catch (e) {\n          console.log('Failed to decode token for user id');\n        }\n      }\n    }\n    return userId;\n  };\n\n  const fetchMyPosts = async () => {\n    setLoading(true);\n    try {\n      const userId = resolveUserId();\n      if (!userId) {\n        setPosts([]);\n        setLoading(false);\n        return;\n      }\n      const res = await api.get('/posts', { params: { authorId: userId, t: Date.now() } });\n      setPosts(res.data || []);\n    } catch (err) {\n      console.error('Error loading my posts:', err);\n      setPosts([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMyPosts();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <section className=\"hero-section\">\n        <h1 className=\"hero-title\">My Posts</h1>\n        <p className=\"hero-subtitle\">All posts you have created</p>\n      </section>\n\n      {loading ? (\n        <div className=\"loading\"><div className=\"loading-spinner\" /></div>\n      ) : (\n        <div className=\"posts-grid\">\n          {posts.length > 0 ? (\n            posts.map(post => <PostCard key={post._id} post={post} />)\n          ) : (\n            <div style={{ textAlign: 'center', padding: '3rem', color: 'rgba(255, 255, 255, 0.7)', fontSize: '1.1rem', gridColumn: '1 / -1' }}>\n              You haven't created any posts yet.\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MyPosts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}